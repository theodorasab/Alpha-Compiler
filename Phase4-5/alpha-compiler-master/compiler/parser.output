State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 $@1: /* empty */

    3 statements: statements $@1 statement
    4           | statement

    5 statement: expression SEMICOLON
    6          | ifstmt
    7          | whilestmt
    8          | forstmt
    9          | returnstmt
   10          | BREAK SEMICOLON
   11          | CONTINUE SEMICOLON
   12          | block
   13          | funcdef
   14          | SEMICOLON

   15 expression: assignexpr
   16           | expression PLUS expression
   17           | expression MINUS expression
   18           | expression MULT expression
   19           | expression DIV expression
   20           | expression MOD expression
   21           | expression GREATER_THAN expression
   22           | expression GREATER_OR_EQUAL expression
   23           | expression LESS_THAN expression
   24           | expression LESS_OR_EQUAL expression

   25 $@2: /* empty */

   26 expression: expression EQUALS_EQUALS $@2 expression

   27 $@3: /* empty */

   28 expression: expression NOT_EQUALS $@3 expression

   29 $@4: /* empty */

   30 expression: expression AND $@4 M expression

   31 $@5: /* empty */

   32 expression: expression OR $@5 M expression
   33           | term

   34 M: /* empty */

   35 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   36     | MINUS expression
   37     | NOT expression
   38     | PLUS_PLUS lvalue
   39     | lvalue PLUS_PLUS
   40     | MINUS_MINUS lvalue
   41     | lvalue MINUS_MINUS
   42     | primary

   43 $@6: /* empty */

   44 assignexpr: lvalue $@6 EQUALS expression

   45 primary: lvalue
   46        | call
   47        | objectdef
   48        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   49        | const

   50 lvalue: ID
   51       | LOCAL ID
   52       | DOUBLE_COLON ID
   53       | member

   54 member: lvalue DOT ID
   55       | lvalue LEFT_BRACE expression RIGHT_BRACE
   56       | call DOT ID
   57       | call LEFT_BRACE expression RIGHT_BRACE

   58 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   59     | lvalue callsuffix
   60     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   61 callsuffix: normcall
   62           | methodcall

   63 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   65 elist: expression
   66      | expression COMMA elist
   67      | /* empty */

   68 objectdef: LEFT_BRACE elist RIGHT_BRACE
   69          | LEFT_BRACE indexed RIGHT_BRACE

   70 indexed: indexedelem
   71        | indexedelem COMMA indexed

   72 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   73 block: blockstart blockend
   74      | blockstart blockstmt blockend

   75 blockstart: LEFT_BRACKET

   76 blockend: RIGHT_BRACKET

   77 blockstmt: statement
   78          | statement blockstmt

   79 $@7: /* empty */

   80 $@8: /* empty */

   81 $@9: /* empty */

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist $@8 RIGHT_PARENTHESIS $@9 funcbody

   83 funcbody: block

   84 funcstart: FUNCTION ID
   85          | FUNCTION

   86 const: NUM
   87      | STRING
   88      | NIL
   89      | TRUE
   90      | FALSE

   91 idlist: arg
   92       | arg COMMA idlist
   93       | /* empty */

   94 arg: ID

   95 ifstmt: ifprefix statement
   96       | ifprefix statement elseprefix statement

   97 elseprefix: ELSE

   98 $@10: /* empty */

   99 ifprefix: IF LEFT_PARENTHESIS $@10 expression RIGHT_PARENTHESIS

  100 whilestart: WHILE

  101 $@11: /* empty */

  102 whilecond: LEFT_PARENTHESIS $@11 expression RIGHT_PARENTHESIS

  103 whilestmt: whilestart whilecond statement

  104 forprefix: forstart elist SEMICOLON M expression SEMICOLON

  105 forstart: FOR LEFT_PARENTHESIS

  106 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N

  107 N: /* empty */

  108 returnstmt: RETURN SEMICOLON
  109           | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 86
ID (259) 50 51 52 54 56 64 84 94
STRING (260) 87
IF (261) 99
ELSE (262) 97
WHILE (263) 100
FOR (264) 105
FUNCTION (265) 84 85
RETURN (266) 108 109
BREAK (267) 10
CONTINUE (268) 11
AND (269) 30
NOT (270) 37
OR (271) 32
LOCAL (272) 51
TRUE (273) 89
FALSE (274) 90
NIL (275) 88
LEFT_BRACE (276) 55 57 68 69
RIGHT_BRACE (277) 55 57 68 69
LEFT_BRACKET (278) 72 75
RIGHT_BRACKET (279) 72 76
LEFT_PARENTHESIS (280) 35 48 58 60 63 64 82 99 102 105
RIGHT_PARENTHESIS (281) 35 48 58 60 63 64 82 99 102 106
SEMICOLON (282) 5 10 11 14 104 108 109
COMMA (283) 66 71 92
COLON (284) 72
DOUBLE_COLON (285) 52
DOT (286) 54 56
DOUBLE_DOT (287) 64
EQUALS (288) 44
PLUS (289) 16
MINUS (290) 17 36
MULT (291) 18
DIV (292) 19
MOD (293) 20
EQUALS_EQUALS (294) 26
NOT_EQUALS (295) 28
PLUS_PLUS (296) 38 39
MINUS_MINUS (297) 40 41
GREATER_THAN (298) 21
LESS_THAN (299) 23
GREATER_OR_EQUAL (300) 22
LESS_OR_EQUAL (301) 24
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
statements (50)
    on left: 3 4, on right: 1 3
$@1 (51)
    on left: 2, on right: 3
statement (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 4 77 78 95 96 103
    106
expression (53)
    on left: 15 16 17 18 19 20 21 22 23 24 26 28 30 32 33, on right:
    5 16 17 18 19 20 21 22 23 24 26 28 30 32 35 36 37 44 55 57 65 66
    72 99 102 104 109
$@2 (54)
    on left: 25, on right: 26
$@3 (55)
    on left: 27, on right: 28
$@4 (56)
    on left: 29, on right: 30
$@5 (57)
    on left: 31, on right: 32
M (58)
    on left: 34, on right: 30 32 104
term (59)
    on left: 35 36 37 38 39 40 41 42, on right: 33
assignexpr (60)
    on left: 44, on right: 15
$@6 (61)
    on left: 43, on right: 44
primary (62)
    on left: 45 46 47 48 49, on right: 42
lvalue (63)
    on left: 50 51 52 53, on right: 38 39 40 41 44 45 54 55 59
member (64)
    on left: 54 55 56 57, on right: 53
call (65)
    on left: 58 59 60, on right: 46 56 57 58
callsuffix (66)
    on left: 61 62, on right: 59
normcall (67)
    on left: 63, on right: 61
methodcall (68)
    on left: 64, on right: 62
elist (69)
    on left: 65 66 67, on right: 58 60 63 64 66 68 104 106
objectdef (70)
    on left: 68 69, on right: 47
indexed (71)
    on left: 70 71, on right: 69 71
indexedelem (72)
    on left: 72, on right: 70 71
block (73)
    on left: 73 74, on right: 12 83
blockstart (74)
    on left: 75, on right: 73 74
blockend (75)
    on left: 76, on right: 73 74
blockstmt (76)
    on left: 77 78, on right: 74 78
funcdef (77)
    on left: 82, on right: 13 48 60
$@7 (78)
    on left: 79, on right: 82
$@8 (79)
    on left: 80, on right: 82
$@9 (80)
    on left: 81, on right: 82
funcbody (81)
    on left: 83, on right: 82
funcstart (82)
    on left: 84 85, on right: 82
const (83)
    on left: 86 87 88 89 90, on right: 49
idlist (84)
    on left: 91 92 93, on right: 82 92
arg (85)
    on left: 94, on right: 91 92
ifstmt (86)
    on left: 95 96, on right: 6
elseprefix (87)
    on left: 97, on right: 96
ifprefix (88)
    on left: 99, on right: 95 96
$@10 (89)
    on left: 98, on right: 99
whilestart (90)
    on left: 100, on right: 103
whilecond (91)
    on left: 102, on right: 103
$@11 (92)
    on left: 101, on right: 102
whilestmt (93)
    on left: 103, on right: 7
forprefix (94)
    on left: 104, on right: 106
forstart (95)
    on left: 105, on right: 104
forstmt (96)
    on left: 106, on right: 8
N (97)
    on left: 107, on right: 106
returnstmt (98)
    on left: 108 109, on right: 9


state 0

    0 $accept: . program $end

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    program     go to state 24
    statements  go to state 25
    statement   go to state 26
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 1

   86 const: NUM .

    $default  reduce using rule 86 (const)


state 2

   50 lvalue: ID .

    $default  reduce using rule 50 (lvalue)


state 3

   87 const: STRING .

    $default  reduce using rule 87 (const)


state 4

   99 ifprefix: IF . LEFT_PARENTHESIS $@10 expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 48


state 5

  100 whilestart: WHILE .

    $default  reduce using rule 100 (whilestart)


state 6

  105 forstart: FOR . LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49


state 7

   84 funcstart: FUNCTION . ID
   85          | FUNCTION .

    ID  shift, and go to state 50

    $default  reduce using rule 85 (funcstart)


state 8

  108 returnstmt: RETURN . SEMICOLON
  109           | RETURN . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 51
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 9

   10 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 10

   11 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 11

   37 term: NOT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 55
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 12

   51 lvalue: LOCAL . ID

    ID  shift, and go to state 56


state 13

   89 const: TRUE .

    $default  reduce using rule 89 (const)


state 14

   90 const: FALSE .

    $default  reduce using rule 90 (const)


state 15

   88 const: NIL .

    $default  reduce using rule 88 (const)


state 16

   68 objectdef: LEFT_BRACE . elist RIGHT_BRACE
   69          | LEFT_BRACE . indexed RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 57
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression   go to state 58
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 59
    objectdef    go to state 34
    indexed      go to state 60
    indexedelem  go to state 61
    const        go to state 39


state 17

   75 blockstart: LEFT_BRACKET .

    $default  reduce using rule 75 (blockstart)


state 18

   35 term: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
   48 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   60 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    FUNCTION          shift, and go to state 7
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 63
    funcstart   go to state 38
    const       go to state 39


state 19

   14 statement: SEMICOLON .

    $default  reduce using rule 14 (statement)


state 20

   52 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 64


state 21

   36 term: MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 22

   38 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 67
    member  go to state 32
    call    go to state 68


state 23

   40 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 69
    member  go to state 32
    call    go to state 68


state 24

    0 $accept: program . $end

    $end  shift, and go to state 70


state 25

    1 program: statements .
    3 statements: statements . $@1 statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 2 ($@1)

    $@1  go to state 71


state 26

    4 statements: statement .

    $default  reduce using rule 4 (statements)


state 27

    5 statement: expression . SEMICOLON
   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 28

   33 expression: term .

    $default  reduce using rule 33 (expression)


state 29

   15 expression: assignexpr .

    $default  reduce using rule 15 (expression)


state 30

   42 term: primary .

    $default  reduce using rule 42 (term)


state 31

   39 term: lvalue . PLUS_PLUS
   41     | lvalue . MINUS_MINUS
   44 assignexpr: lvalue . $@6 EQUALS expression
   45 primary: lvalue .
   54 member: lvalue . DOT ID
   55       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   59 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89
    PLUS_PLUS         shift, and go to state 90
    MINUS_MINUS       shift, and go to state 91

    EQUALS    reduce using rule 43 ($@6)
    $default  reduce using rule 45 (primary)

    $@6         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 32

   53 lvalue: member .

    $default  reduce using rule 53 (lvalue)


state 33

   46 primary: call .
   56 member: call . DOT ID
   57       | call . LEFT_BRACE expression RIGHT_BRACE
   58 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98

    $default  reduce using rule 46 (primary)


state 34

   47 primary: objectdef .

    $default  reduce using rule 47 (primary)


state 35

   12 statement: block .

    $default  reduce using rule 12 (statement)


state 36

   73 block: blockstart . blockend
   74      | blockstart . blockstmt blockend

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    RIGHT_BRACKET     shift, and go to state 99
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockend    go to state 101
    blockstmt   go to state 102
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 37

   13 statement: funcdef .

    $default  reduce using rule 13 (statement)


state 38

   82 funcdef: funcstart . LEFT_PARENTHESIS $@7 idlist $@8 RIGHT_PARENTHESIS $@9 funcbody

    LEFT_PARENTHESIS  shift, and go to state 103


state 39

   49 primary: const .

    $default  reduce using rule 49 (primary)


state 40

    6 statement: ifstmt .

    $default  reduce using rule 6 (statement)


state 41

   95 ifstmt: ifprefix . statement
   96       | ifprefix . statement elseprefix statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 104
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 42

  103 whilestmt: whilestart . whilecond statement

    LEFT_PARENTHESIS  shift, and go to state 105

    whilecond  go to state 106


state 43

    7 statement: whilestmt .

    $default  reduce using rule 7 (statement)


state 44

  106 forstmt: forprefix . N elist RIGHT_PARENTHESIS N statement N

    $default  reduce using rule 107 (N)

    N  go to state 107


state 45

  104 forprefix: forstart . elist SEMICOLON M expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 108
    objectdef   go to state 34
    const       go to state 39


state 46

    8 statement: forstmt .

    $default  reduce using rule 8 (statement)


state 47

    9 statement: returnstmt .

    $default  reduce using rule 9 (statement)


state 48

   99 ifprefix: IF LEFT_PARENTHESIS . $@10 expression RIGHT_PARENTHESIS

    $default  reduce using rule 98 ($@10)

    $@10  go to state 109


state 49

  105 forstart: FOR LEFT_PARENTHESIS .

    $default  reduce using rule 105 (forstart)


state 50

   84 funcstart: FUNCTION ID .

    $default  reduce using rule 84 (funcstart)


state 51

  108 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 108 (returnstmt)


state 52

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
  109 returnstmt: RETURN expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 110
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 53

   10 statement: BREAK SEMICOLON .

    $default  reduce using rule 10 (statement)


state 54

   11 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (statement)


state 55

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   37 term: NOT expression .

    $default  reduce using rule 37 (term)


state 56

   51 lvalue: LOCAL ID .

    $default  reduce using rule 51 (lvalue)


state 57

   72 indexedelem: LEFT_BRACKET . expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 58

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   65 elist: expression .
   66      | expression . COMMA elist

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COMMA             shift, and go to state 112
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 65 (elist)


state 59

   68 objectdef: LEFT_BRACE elist . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 113


state 60

   69 objectdef: LEFT_BRACE indexed . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 114


state 61

   70 indexed: indexedelem .
   71        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 115

    $default  reduce using rule 70 (indexed)


state 62

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   35 term: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 116
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 63

   48 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   60 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 117


state 64

   52 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 52 (lvalue)


state 65

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   36 term: MINUS expression .

    $default  reduce using rule 36 (term)


state 66

   60 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcdef    go to state 118
    funcstart  go to state 38


state 67

   38 term: PLUS_PLUS lvalue .
   54 member: lvalue . DOT ID
   55       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   59 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 38 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 68

   56 member: call . DOT ID
   57       | call . LEFT_BRACE expression RIGHT_BRACE
   58 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98


state 69

   40 term: MINUS_MINUS lvalue .
   54 member: lvalue . DOT ID
   55       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   59 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 40 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 70

    0 $accept: program $end .

    $default  accept


state 71

    3 statements: statements $@1 . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 119
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 72

   30 expression: expression AND . $@4 M expression

    $default  reduce using rule 29 ($@4)

    $@4  go to state 120


state 73

   32 expression: expression OR . $@5 M expression

    $default  reduce using rule 31 ($@5)

    $@5  go to state 121


state 74

    5 statement: expression SEMICOLON .

    $default  reduce using rule 5 (statement)


state 75

   16 expression: expression PLUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 76

   17 expression: expression MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 77

   18 expression: expression MULT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 78

   19 expression: expression DIV . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 79

   20 expression: expression MOD . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 80

   26 expression: expression EQUALS_EQUALS . $@2 expression

    $default  reduce using rule 25 ($@2)

    $@2  go to state 127


state 81

   28 expression: expression NOT_EQUALS . $@3 expression

    $default  reduce using rule 27 ($@3)

    $@3  go to state 128


state 82

   21 expression: expression GREATER_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 83

   23 expression: expression LESS_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 84

   22 expression: expression GREATER_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 85

   24 expression: expression LESS_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 86

   55 member: lvalue LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 87

   63 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 39


state 88

   54 member: lvalue DOT . ID

    ID  shift, and go to state 135


state 89

   64 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 136


state 90

   39 term: lvalue PLUS_PLUS .

    $default  reduce using rule 39 (term)


state 91

   41 term: lvalue MINUS_MINUS .

    $default  reduce using rule 41 (term)


state 92

   44 assignexpr: lvalue $@6 . EQUALS expression

    EQUALS  shift, and go to state 137


state 93

   59 call: lvalue callsuffix .

    $default  reduce using rule 59 (call)


state 94

   61 callsuffix: normcall .

    $default  reduce using rule 61 (callsuffix)


state 95

   62 callsuffix: methodcall .

    $default  reduce using rule 62 (callsuffix)


state 96

   57 member: call LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 138
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 97

   58 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 139
    objectdef   go to state 34
    const       go to state 39


state 98

   56 member: call DOT . ID

    ID  shift, and go to state 140


state 99

   76 blockend: RIGHT_BRACKET .

    $default  reduce using rule 76 (blockend)


state 100

   77 blockstmt: statement .
   78          | statement . blockstmt

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 77 (blockstmt)

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockstmt   go to state 141
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 101

   73 block: blockstart blockend .

    $default  reduce using rule 73 (block)


state 102

   74 block: blockstart blockstmt . blockend

    RIGHT_BRACKET  shift, and go to state 99

    blockend  go to state 142


state 103

   82 funcdef: funcstart LEFT_PARENTHESIS . $@7 idlist $@8 RIGHT_PARENTHESIS $@9 funcbody

    $default  reduce using rule 79 ($@7)

    $@7  go to state 143


state 104

   95 ifstmt: ifprefix statement .
   96       | ifprefix statement . elseprefix statement

    ELSE  shift, and go to state 144

    ELSE      [reduce using rule 95 (ifstmt)]
    $default  reduce using rule 95 (ifstmt)

    elseprefix  go to state 145


state 105

  102 whilecond: LEFT_PARENTHESIS . $@11 expression RIGHT_PARENTHESIS

    $default  reduce using rule 101 ($@11)

    $@11  go to state 146


state 106

  103 whilestmt: whilestart whilecond . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 147
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 107

  106 forstmt: forprefix N . elist RIGHT_PARENTHESIS N statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 148
    objectdef   go to state 34
    const       go to state 39


state 108

  104 forprefix: forstart elist . SEMICOLON M expression SEMICOLON

    SEMICOLON  shift, and go to state 149


state 109

   99 ifprefix: IF LEFT_PARENTHESIS $@10 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 150
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 110

  109 returnstmt: RETURN expression SEMICOLON .

    $default  reduce using rule 109 (returnstmt)


state 111

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   72 indexedelem: LEFT_BRACKET expression . COLON expression RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COLON             shift, and go to state 151
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 112

   66 elist: expression COMMA . elist

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 152
    objectdef   go to state 34
    const       go to state 39


state 113

   68 objectdef: LEFT_BRACE elist RIGHT_BRACE .

    $default  reduce using rule 68 (objectdef)


state 114

   69 objectdef: LEFT_BRACE indexed RIGHT_BRACE .

    $default  reduce using rule 69 (objectdef)


state 115

   71 indexed: indexedelem COMMA . indexed

    LEFT_BRACKET  shift, and go to state 57

    indexed      go to state 153
    indexedelem  go to state 61


state 116

   35 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 35 (term)


state 117

   48 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154

    $default  reduce using rule 48 (primary)


state 118

   60 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 155


state 119

    3 statements: statements $@1 statement .

    $default  reduce using rule 3 (statements)


state 120

   30 expression: expression AND $@4 . M expression

    $default  reduce using rule 34 (M)

    M  go to state 156


state 121

   32 expression: expression OR $@5 . M expression

    $default  reduce using rule 34 (M)

    M  go to state 157


state 122

   16 expression: expression . PLUS expression
   16           | expression PLUS expression .
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 16 (expression)


state 123

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   17           | expression MINUS expression .
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 17 (expression)


state 124

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   18           | expression MULT expression .
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    $default  reduce using rule 18 (expression)


state 125

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   19           | expression DIV expression .
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    $default  reduce using rule 19 (expression)


state 126

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   20           | expression MOD expression .
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    $default  reduce using rule 20 (expression)


state 127

   26 expression: expression EQUALS_EQUALS $@2 . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 158
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 128

   28 expression: expression NOT_EQUALS $@3 . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 129

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   21           | expression GREATER_THAN expression .
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expression)


state 130

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   23           | expression LESS_THAN expression .
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expression)


state 131

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   22           | expression GREATER_OR_EQUAL expression .
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expression)


state 132

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   24           | expression LESS_OR_EQUAL expression .
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expression)


state 133

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   55 member: lvalue LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 160
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 134

   63 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 161


state 135

   54 member: lvalue DOT ID .

    $default  reduce using rule 54 (member)


state 136

   64 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 162


state 137

   44 assignexpr: lvalue $@6 EQUALS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 163
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 138

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   57 member: call LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 164
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 139

   58 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 165


state 140

   56 member: call DOT ID .

    $default  reduce using rule 56 (member)


state 141

   78 blockstmt: statement blockstmt .

    $default  reduce using rule 78 (blockstmt)


state 142

   74 block: blockstart blockstmt blockend .

    $default  reduce using rule 74 (block)


state 143

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 . idlist $@8 RIGHT_PARENTHESIS $@9 funcbody

    ID  shift, and go to state 166

    $default  reduce using rule 93 (idlist)

    idlist  go to state 167
    arg     go to state 168


state 144

   97 elseprefix: ELSE .

    $default  reduce using rule 97 (elseprefix)


state 145

   96 ifstmt: ifprefix statement elseprefix . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 169
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 146

  102 whilecond: LEFT_PARENTHESIS $@11 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 170
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 147

  103 whilestmt: whilestart whilecond statement .

    $default  reduce using rule 103 (whilestmt)


state 148

  106 forstmt: forprefix N elist . RIGHT_PARENTHESIS N statement N

    RIGHT_PARENTHESIS  shift, and go to state 171


state 149

  104 forprefix: forstart elist SEMICOLON . M expression SEMICOLON

    $default  reduce using rule 34 (M)

    M  go to state 172


state 150

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   99 ifprefix: IF LEFT_PARENTHESIS $@10 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 173
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 151

   72 indexedelem: LEFT_BRACKET expression COLON . expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 174
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 152

   66 elist: expression COMMA elist .

    $default  reduce using rule 66 (elist)


state 153

   71 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 71 (indexed)


state 154

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 175
    objectdef   go to state 34
    const       go to state 39


state 155

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154


state 156

   30 expression: expression AND $@4 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 176
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 157

   32 expression: expression OR $@5 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 177
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 158

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   26           | expression EQUALS_EQUALS $@2 expression .
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 26 (expression)


state 159

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   28           | expression NOT_EQUALS $@3 expression .
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 28 (expression)


state 160

   55 member: lvalue LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 55 (member)


state 161

   63 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (normcall)


state 162

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 67 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 178
    objectdef   go to state 34
    const       go to state 39


state 163

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   44 assignexpr: lvalue $@6 EQUALS expression .

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 44 (assignexpr)


state 164

   57 member: call LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 57 (member)


state 165

   58 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (call)


state 166

   94 arg: ID .

    $default  reduce using rule 94 (arg)


state 167

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist . $@8 RIGHT_PARENTHESIS $@9 funcbody

    $default  reduce using rule 80 ($@8)

    $@8  go to state 179


state 168

   91 idlist: arg .
   92       | arg . COMMA idlist

    COMMA  shift, and go to state 180

    $default  reduce using rule 91 (idlist)


state 169

   96 ifstmt: ifprefix statement elseprefix statement .

    $default  reduce using rule 96 (ifstmt)


state 170

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
  102 whilecond: LEFT_PARENTHESIS $@11 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 181
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 171

  106 forstmt: forprefix N elist RIGHT_PARENTHESIS . N statement N

    $default  reduce using rule 107 (N)

    N  go to state 182


state 172

  104 forprefix: forstart elist SEMICOLON M . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 183
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 173

   99 ifprefix: IF LEFT_PARENTHESIS $@10 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 99 (ifprefix)


state 174

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   72 indexedelem: LEFT_BRACKET expression COLON expression . RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACKET     shift, and go to state 184
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 175

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 185


state 176

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   30           | expression AND $@4 M expression .
   32           | expression . OR $@5 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 30 (expression)


state 177

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
   32           | expression OR $@5 M expression .

    AND               shift, and go to state 72
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 32 (expression)


state 178

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 186


state 179

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist $@8 . RIGHT_PARENTHESIS $@9 funcbody

    RIGHT_PARENTHESIS  shift, and go to state 187


state 180

   92 idlist: arg COMMA . idlist

    ID  shift, and go to state 166

    $default  reduce using rule 93 (idlist)

    idlist  go to state 188
    arg     go to state 168


state 181

  102 whilecond: LEFT_PARENTHESIS $@11 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 102 (whilecond)


state 182

  106 forstmt: forprefix N elist RIGHT_PARENTHESIS N . statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 189
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 183

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   26           | expression . EQUALS_EQUALS $@2 expression
   28           | expression . NOT_EQUALS $@3 expression
   30           | expression . AND $@4 M expression
   32           | expression . OR $@5 M expression
  104 forprefix: forstart elist SEMICOLON M expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 190
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 184

   72 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET .

    $default  reduce using rule 72 (indexedelem)


state 185

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 60 (call)


state 186

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 64 (methodcall)


state 187

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist $@8 RIGHT_PARENTHESIS . $@9 funcbody

    $default  reduce using rule 81 ($@9)

    $@9  go to state 191


state 188

   92 idlist: arg COMMA idlist .

    $default  reduce using rule 92 (idlist)


state 189

  106 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement . N

    $default  reduce using rule 107 (N)

    N  go to state 192


state 190

  104 forprefix: forstart elist SEMICOLON M expression SEMICOLON .

    $default  reduce using rule 104 (forprefix)


state 191

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist $@8 RIGHT_PARENTHESIS $@9 . funcbody

    LEFT_BRACKET  shift, and go to state 17

    block       go to state 193
    blockstart  go to state 36
    funcbody    go to state 194


state 192

  106 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N .

    $default  reduce using rule 106 (forstmt)


state 193

   83 funcbody: block .

    $default  reduce using rule 83 (funcbody)


state 194

   82 funcdef: funcstart LEFT_PARENTHESIS $@7 idlist $@8 RIGHT_PARENTHESIS $@9 funcbody .

    $default  reduce using rule 82 (funcdef)
